--AULA 68 - HAVING/CLAUSULAS

USE TREINAMENTO

--SUBCONSULTAS
-- UM SELECT DENTRO DE OUTRO

--SUBSELECT, ROUND, ISNULL
SELECT     V.ID AS 'VENDA',
		   V.DATAPEDIDO,
		   C.NOME AS 'CLIENTE',
	       FP.DESCRICAO AS 'FORMA PAGAMENTO',		  
		   ROUND((SELECT SUM(ISNULL(QTDE, 0) * VRUNITARIO) FROM VENDAITENS AS VI WHERE VI.VENDAID = V.ID),2) AS TOTALVENDA,
		   (SELECT COUNT(VI.ID) FROM VENDAITENS AS VI WHERE VI.VENDAID = V.ID) AS ITENS
	  FROM VENDA AS V INNER JOIN CLIENTE AS C ON V.CLIENTEID = C.ID
LEFT JOIN  TITULO AS T ON V.ID = T.VENDAID
LEFT JOIN  FORMAPAGAMENTO AS FP ON T.FORMAID = FP.ID
  ORDER BY C.NOME

  --PODENDO SER MAIS RAPIDO
  --PORQUE ELE REALIZA A CONSULTA PRIMEIRO
  --DEPOIS O JOIN


  SELECT * FROM PRODUTO
  SELECT DISTINCT(TIPO) FROM PRODUTO
  --traz os campo com uma linha unica,
  --mesmo que tenha infinitas linhas com o mesmo nome

  SELECT CODIGO FROM PRODUTO ORDER BY CODIGO DESC
  --ORDEM DESCENDENTE

  SELECT MAX(CODIGO) FROM PRODUTO
  --ELE TRAZ O MAIOR NUMERO DO CAMPO QUE VOCE SELECIONOU DA TABELA
  SELECT MAX(CODIGO) + 1 FROM PRODUTO
  --TRAZ O PROXIMO DO MAXIMO

  SELECT TOP(100) * FROM PRODUTO
--ELE SELECIONA OS PRIMEIROS ELEMENTOS ADICIONADOS NA TABELA
--OU SEJA OS TOPS, OS PRIMEIROS REGISTRADOS ADDS
--SELECT TOP(QUANTOS DESEJA TRAZER)

SELECT TOP(100) * FROM PRODUTO
SELECT MAX(CODIGO) FROM PRODUTO
SELECT DISTINCT (TIPO) FROM PRODUTO
SELECT ISNULL(CUSTO, 0) FROM PRODUTO
SELECT ROUND(CUSTO,2) FROM PRODUTO
SELECT COUNT(ID) FROM PRODUTO


--REALIZAR A CONSULTA NOVAMENTE
--HAVING PARA FILTRAGEM DE DADOS AGRUPADOS
SELECT     V.ID AS 'VENDA',
		   V.DATAPEDIDO,
		   C.NOME AS 'CLIENTE',	  
		   SUM(VI.QTDE * VI.VRUNITARIO) AS TOTALVENDA		   
	  FROM VENDA AS V INNER JOIN CLIENTE AS C ON V.CLIENTEID = C.ID
INNER JOIN VENDAITENS AS VI ON V.ID = VI.VENDAID
  GROUP BY V.ID, V.DATAPEDIDO, C.NOME
  HAVING (SUM(VI.QTDE * VI.VRUNITARIO) < 100) -- < MENOR || > MAIOR
  ORDER BY C.NOME

  --SUBCONSULTA COM A UTILIZAÇÃO DO WHERE PARA FILTRAGEM
  SELECT TAB.VENDA,
		 TAB.DATAPEDIDO,
		 TAB.CLIENTE,
		 TAB.TOTALVENDA
		 FROM
  (SELECT  V.ID AS 'VENDA',
		   V.DATAPEDIDO,
		   C.NOME AS 'CLIENTE',	  
		   SUM(VI.QTDE * VI.VRUNITARIO) AS TOTALVENDA		   
	  FROM VENDA AS V INNER JOIN CLIENTE AS C ON V.CLIENTEID = C.ID
INNER JOIN VENDAITENS AS VI ON V.ID = VI.VENDAID
  GROUP BY V.ID, V.DATAPEDIDO, C.NOME) AS TAB
WHERE TAB.TOTALVENDA < 100
ORDER BY TAB.CLIENTE